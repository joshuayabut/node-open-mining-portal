
worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    keepalive_timeout  65;

    server {
       	listen 80 default_server;
       	listen [::]:80 default_server;
        server_name _;
        location ^~ /.well-known/acme-challenge/ {
            allow all;
            default_type text/plain;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }


    # HTTPS server
    #
    server {
        listen       443 ssl;
        server_name  kickpool.ru www.kickpool.ru;

        ssl_certificate      /etc/letsencrypt/live/kickpool.ru/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/kickpool.ru/privkey.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
                try_files $uri $uri/ =404;
        }

        location ~ .$ {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_set_header Host $host;
                proxy_pass http://127.0.0.1:8080;
        }
    }
    include servers/*;
}


# Securing TCP Traffic to Upstream Pools
#
stream {
    upstream vot_pool {
        server 192.168.1.34:5555;
    }

    server {
        listen 5556 ssl;
	proxy_pass vot_pool;
	
	ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers   HIGH:!aNULL:!MD5;

       	ssl_certificate      /etc/letsencrypt/live/kickpool.ru/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/kickpool.ru/privkey.pem;
    }
}

#include /usr/local/etc/nginx/passthrough.conf;
